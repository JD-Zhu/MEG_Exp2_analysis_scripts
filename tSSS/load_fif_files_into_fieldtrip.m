% Specify the folder location & file name here:
dir_name = 'E:\Judy\Exp2\6_MEG-data\RAW_DATA\A02-KW-3591\';
file_name = '3591_KW_ME180_2019_09_28_B1-concat_TSPCA10000_3';

% NOTE: this script relies on the default file names generated by the tSSS
% script. Therefore, please do not rename the tSSS output files!


%% Read in the original data, to create the "alldata" structure

rawfile = [dir_name file_name '.con'];            

cfg                      = [];
cfg.trialfun             = 'ft_trialfun_general';
cfg.headerfile           = rawfile;
cfg.datafile             = rawfile;
cfg.trialdef.triallength = Inf;
cfg.trialdef.ntrials     = 1; % read in all data as a single segment, coz filtering should be done on continuous data
cfg = ft_definetrial(cfg);

cfg.continuous = 'yes';
alldata = ft_preprocessing(cfg);


%% Use the data after tSSS to replace the original data
% We can read in the fif files using ft_read_data. This gives us a matrix 
% which contains the actual MEG measurements, so we just need to 
% insert this matrix into the "alldata" struct created earlier

% If we have a large dataset (i.e. > 2087 seconds of MEG recording), 
% the tSSS script should have output more than one .fif files, 
% so we need to join these together

% check how many fif files there are
fif_files = dir([dir_name file_name '_raw_tsss*.fif']);
fif_files = {fif_files.name}; % extract the filenames

% read in the first fif file
tsss = ft_read_data([dir_name file_name '_raw_tsss.fif']);
tmp = tsss(1:160, :); % only take the MEG channels (1-160)

% Read in each subsequent fif file
for i = 2:length(fif_files)
    tsss = ft_read_data([dir_name file_name '_raw_tsss-' mat2str(i-1) '.fif']);
    tmp = [tmp tsss(1:160, :)]; % append to the previous matrix
end

% use the tSSS data to replace the original data
alldata_tsss = alldata;
alldata_tsss.trial{1,1}(1:160, :) = tmp;
    
    
%% Plot
cfg           = [];
cfg.viewmode  = 'vertical';
cfg.continous = 'yes';
cfg.blocksize = 60; % display 60-sec segments
cfg.ylim      = [ -4e-13   4e-13 ];
cfg.channel = 'MEG';

ft_databrowser(cfg, alldata);       % before tSSS
ft_databrowser(cfg, alldata_tsss);  % after tSSS
